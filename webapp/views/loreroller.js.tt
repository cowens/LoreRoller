var basepool = 5;
var pool = 5;
var multi = 1;
var prof = "3";
var stamina = 0;
var focus = 0;
var rolls_cache = "[]";
var sounds = 0;
var rolling_sound;

function calculate_focus() {
	focus = $("#ego").val();
	var last = 0;
	for (n = 1; n <= 12; n += 1) {
		if ($("#s" + n + "_3").is(':checked')) {
			last = n;
		}
	}
	focus -= last;
	if (last > 6) {
		focus -= last - 6;
	}
	$('#focus').html(focus);
	if ($("#egopool").is(":checked")) {
		pool = focus;
	}
	return focus;
}
$(function() {
	$( ".drag" ).draggable({handle: "center"});
});
$(document).ready(function() {
	calculate_focus();
	$("#save").click(function() {
		var url = "<% platform %>/save";
		var data = { stam: [] };
		for (m = 1; m <= 12; m += 1) {
			var found = 0;
			for (n = 3; n >= 1; n--) {
				var stam = "#s" + m + "_" + n;
				if ($(stam).is(':checked')) {
					found = 1;
					data["stam"].push(n)
					break;
				}
			}
			if (!found) {
				data["stam"].push(0);
			}
		}
		data["sound"]        = $("#sound").is(':checked');
		data["power"]         = $("#power").val();
		data["resilience"]    = $("#resilience").val();
		data["finesse"]       = $("#finesse").val();
		data["presence"]      = $("#presence").val();
		data["deduction"]     = $("#deduction").val();
		data["attunement"]    = $("#attunement").val();
		data["ego"]           = $("#ego").val();
		data["comprehension"] = $("#comprehension").val();

		var id;
		try {
			id = gapi.hangout.getParticipantById(gapi.hangout.getParticipantId()).person.id;
		} catch(e) {
			id = 10041697270;
		}
		var name = $("#name").val();

		var jsondata = JSON.stringify(data);

		$.ajax({
			url: url,
			dataType: 'jsonp',
			data: { id: id, name: name, data: jsondata },
			success: function() {
				try {
					gapi.hangout.layout.displayNotice(name + " was saved");
				} catch(e) {
					alert(name + " was saved");
				}
			}
		});
	});
	$("#load").click(function() {
		var url = "<% platform %>/load";

		var id;
		try {
			id = gapi.hangout.etParticipantById(gapi.hangout.getParticipantId()).person.id;
		} catch(e) {
			id = 10041697270;
		}

		$.ajax({
			url: url,
			dataType: 'jsonp',
			data: { name: $("#name").val(), id: id },
			success: function(data) {
				for (m = 0; m <= 11; m++) {
					var level = data["stam"][m];
					for (n = 1; n <= level; n++) {
						var stam = "#s" + (m + 1) + "_" + n;
						$(stam).attr('checked', true);
					}
					for (n = level + 1; n <= 3; n++) {
						var stam = "#s" + (m + 1) + "_" + n;
						$(stam).attr('checked', false);
					}
				}
				$("#sound").attr('checked', data["sound"]);
				$("#power").val(data["power"]);
				$("#resilience").val(data["resilience"]);
				$("#finesse").val(data["finesse"]);
				$("#presence").val(data["presence"]);
				$("#deduction").val(data["deduction"]);
				$("#attunement").val(data["attunement"]);
				$("#ego").val(data["ego"]);
				$("#comprehension").val(data["comprehension"]);
				calculate_focus();
			}
		});
	});
	$('input').change(function() {
		if (this.name == "pool") {
			if (this.value == "ego") {
				calculate_focus();
				$("#multi1").attr("checked", 1);
				$("#prof3").attr("checked", 1);
				$("input:radio[name=multi]").attr('disabled', true);
			} else if (this.value == "comprehension") {
				pool = $("#" + this.value).val();
				$("#multi1").attr("checked", 1);
				$("#prof3").attr("checked", 1);
				$("input:radio[name=multi]").attr('disabled', true);
			} else {
				basepool = $("#" + this.value).val();
				pool = basepool * multi;
				$("#multi1").attr("disabled", false);
				$("#multi2").attr("disabled", false);
				$("#multi3").attr("disabled", false);
			}
		} else if (this.name == "multi") {
			multi = this.value;
			pool = basepool * multi;
			prof = multi == 1 ? 3 : multi == 2 ? 2 : 1;
			$('#prof' + prof).attr("checked", 1);
		} else if (this.name == "prof") {
			prof = this.value;
		} else if (this.name == "sounds") {
			sounds = this.checked;
		}
	});
	for (n = 1; n <= 12; n += 1) {
		$("#s" + n + "_1").change(function() {
			if (!this.checked) {
				var parts = this.id.split("_");
				var base = "#" + parts[0] + "_";
				$(base + "2").attr('checked', false);
				$(base + "3").attr('checked', false);
			}
			calculate_focus();
		});
		$("#s" + n + "_2").change(function() {
			var parts = this.id.split("_");
			var base = "#" + parts[0] + "_";
			if (this.checked) {
				$(base + "1").attr('checked', true);
			} else {
				$(base + "3").attr('checked', false);
			}
			calculate_focus();
		});
		$("#s" + n + "_3").change(function() {
			if (this.checked) {
				var parts = this.id.split("_");
				var base = "#" + parts[0] + "_";
				$(base + "1").attr('checked', true);
				$(base + "2").attr('checked', true);
			}
			calculate_focus();
		});
	}
	$('.pool_entry').change(function() {
		var name = this.id;
		if ($("#" + name + "pool").attr('checked')) {
			basepool = this.value;
			pool = basepool * multi;
		}
	});
	$('#ego').change(function() {
		calculate_focus();
	});
	try {
		gapi.hangout.data.onStateChanged.add(
			function (change) {
				var data = gapi.hangout.data.getValue("rolls")
				if (data == undefined) {
					data = "[]";
				}
				$('ul#rolls').html(jQuery.parseJSON(data).join(""));
				if (sounds) {
					rolling_sound.play({ volume: 1 });
				}
			}
		);
	} catch(e) {}
	try {
		var rolling_resource = gapi.hangout.av.effects.createAudioResource("<% platform %>/sounds/5d6.wav");
		rolling_sound = rolling_resource.createSound();
	} catch(e) {
		rolling_sound = new Audio("<% platform %>/sounds/5d6.wav");
	}
});

function roll() {
	var rolls     = [];
	var successes = 0;
	for (i = 0; i < pool; i++) {
		var roll = Math.floor((Math.random()*6)+1);
		rolls.push(roll);
		if (roll <= prof) {
			successes++;
		}
	}
	var roller;
	try {
		roller = gapi.hangout.etParticipantById(gapi.hangout.getParticipantId());
	} catch(e) {
		roller = { person: { displayName: "Chas. Owens" } };
	}
	var date = new Date();
	var time = (date.getHours().toString().length == 1 ? "0" + date.getHours() : date.getHours())
		+ ":" + (date.getMinutes().toString().length == 1 ? "0" + date.getMinutes() : date.getMinutes())
		+ ":" + (date.getSeconds().toString().length == 1 ? "0" + date.getSeconds() : date.getSeconds());

	var rolled = successes == pool && pool >= 5 ? " a <b>crit success</b>" : 
		successes == 0 ? " a <b>crit fail</b>" : " <b>" + successes + "</b> successes";
	var sorted_rolls = rolls.length > 16 ? " (lots)" : " (" + rolls.sort().join(", ") + ")";
	var roll_text = "<li>" + time + " <b>" + roller.person.displayName + "</b> " + pool + "/" + prof +
		" rolled " + rolled + sorted_rolls;

	var data;
	try {
		data = gapi.hangout.data.getValue("rolls");
	} catch(e) {
		data = rolls_cache;
	}

	if (data == undefined) {
		data = "[]";
	}

	var rolls = jQuery.parseJSON(data);
	rolls.unshift(roll_text);
	while (rolls.length > 15) {
		rolls.pop();
	}
	while (rolls.length < 15) {
		rolls.push("<li>&nbsp;");
	}
	try {
		gapi.hangout.data.setValue("rolls", JSON.stringify(rolls));
	} catch(e) {
		rolls_cache = JSON.stringify(rolls);
		$('ul#rolls').html(rolls.join(""));
		if (sounds) {
			rolling_sound.play();
		}
	}
}
